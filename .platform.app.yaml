# This file describes an application. You can have multiple applications
# in the same project.
#
# See https://docs.platform.sh/user_guide/reference/platform-app-yaml.html

# The name of this app. Must be unique within a project.
name: 'app'

# The runtime the application uses.
type: 'python:3.8'

# The build-time dependencies of the app.
dependencies:
    python3:
       pipenv: '*'

# The relationships of the application with services or other applications.
#
# The left-hand side is the name of the relationship as it will be exposed
# to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand
# side is in the form `<service name>:<endpoint name>`.
relationships:
    database: "db:postgresql"

# The configuration of app when it is exposed to the web.
web:
    # Whether your app should speak to the webserver via TCP or Unix socket
    # https://docs.platform.sh/configuration/app-containers.html#upstream
    upstream:
        socket_family: unix
    # Commands are run once after deployment to start the application process.
    commands:
        start: "gunicorn -w 4 -b unix:$SOCKET myapp.wsgi:application"
    locations:
        "/":
            passthru: true
        "/static":
            root: "static"
            expires: 1h
            allow: true

# The size of the persistent disk of the application (in MB).
disk: 512

# Set a local R/W mount for logs
mounts:
    'logs':
        source: local
        source_path: logs

# The hooks executed at various points in the lifecycle of the application.
hooks:
  # The build hook runs before the application is deployed, and is useful for
  # assembling the codebase.
  build: |
    pipenv install --system --deploy
    mkdir logs
    python manage.py collectstatic
    rm -rf logs
    curl -fsS https://platform.sh/cli/installer | php
    pip3 install git+git://github.com/ludoge/template-builder.git@mr/python_packaging#egg=template-builder

  deploy: |
    python manage.py migrate

# Auto-update source operation
source:
  operations:
    update:
      command: |
        curl -fsS https://platform.sh/cli/installer | php
        pip3 install git+git://github.com/ludoge/template-builder.git@mr/python_packaging#egg=template-builder
        auto-update django3 update
        git add .
        git commit -m "auto-update" --allow-empty

crons:
  # update:
  #   spec: '0 * * * *'
  #   cmd: |
  #     echo "BEGINNING OF CRON"
  #     echo "BRANCHING ENVIRONMENT"
  #     platform environment:branch update --force --no-clone-parent;
  #     sleep 300
  #     echo "ACTIVATING ENVIRONMENT"
  #     platform environment:activate update --yes;
  #     echo "UPDATING ENVIRONMENT"
  #     platform source-operation:run update --environment update;
  #     echo "PULL REQUEST"
  #     auto-update django3 pull_request;
  #     auto-update django3 test;
  #     auto-update django3 merge_pull_request;
  test:
    spec: '* * * * *'
    cmd: |
      git remote
      git branch -a
      git checkout update
